{"version":3,"sources":["currencyConverter/redux/types.js","currencyConverter/redux/actions.js","currencyConverter/currency/CurrencyItem.js","currencyConverter/currency/CurrencyList.js","currencyConverter/selector/SelectItem.js","currencyConverter/selector/SelectList.js","currencyConverter/CurrencyConverter.js","currencyConverter/redux/reducer.js","App.js","reportWebVitals.js","index.js"],"names":["UPDATE_SYMBOLS","CHANGE_RATES","REMOVE_CURRENCY","ON_FOCUS","ADD_CURRENCY","GET_SYMBOLS","changeRates","base","amount","dispatch","a","fetch","json","data","type","payload","onFocus","code","addCurrency","c","removeButton","updateSymbols","mapDispatchToProps","removeCurrency","connect","state","currencys","props","React","useState","currency","rate","setState","useEffect","input","document","getElementById","fromEvent","pipe","map","e","target","value","debounceTime","distinctUntilChanged","subscribe","trim","style","rmBtnVisibility","visibility","className","id","onInput","event","val","replace","description","onClick","length","SelectItem","symbol","selectState","select","onChange","active","filter","selectedIndex","result","key","push","selectItems","getSymbols","symbols","date","defaultCurrencys","forEach","initState","Date","toLocaleDateString","store","createStore","action","newState","rates","newCurrencys","newSymbols","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7d708c53.chunk.js","sourcesContent":["export const UPDATE_SYMBOLS = \"UPDATE_SYMBOLS\";\r\nexport const CHANGE_RATES = \"CHANGE_RATES\";\r\nexport const REMOVE_CURRENCY = \"REMOVE_CURRENCY\";\r\nexport const ON_FOCUS = \"ON_FOCUS\";\r\nexport const ADD_CURRENCY = \"ADD_CURRENCY\";\r\nexport const GET_SYMBOLS = \"GET_SYMBOLS\";\r\n","import { CHANGE_RATES, ON_FOCUS, REMOVE_CURRENCY, ADD_CURRENCY, GET_SYMBOLS, UPDATE_SYMBOLS } from \"./types\";\r\n\r\nexport function removeCurrency(code) {\r\n    return {\r\n        type: REMOVE_CURRENCY,\r\n        payload: code,\r\n    };\r\n}\r\n\r\nexport function changeRates(base, amount) {\r\n    return async (dispatch) => {\r\n        const data = await (await fetch(`/api/rates/${base}/${amount}`)).json();\r\n        dispatch({ type: CHANGE_RATES, payload: [data,{base,amount}] });\r\n    };\r\n}\r\n\r\nexport function onFocus(code) {\r\n    return {\r\n        type: ON_FOCUS,\r\n        payload: code,\r\n    };\r\n}\r\n\r\nexport function addCurrency(c, removeButton) {\r\n    return {\r\n        type: ADD_CURRENCY,\r\n        payload: [c, removeButton],\r\n    };\r\n}\r\n\r\nexport function getSymbols() {\r\n    return async (dispatch) => {\r\n        const data = await (await fetch(\"/api/symbols\")).json();\r\n        dispatch({ type: GET_SYMBOLS, payload: data.symbols });\r\n    };\r\n}\r\n\r\nexport function updateSymbols() {\r\n    return {\r\n        type: UPDATE_SYMBOLS,\r\n    };\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeCurrency, changeRates, onFocus } from \"../redux/actions\";\r\nimport { fromEvent, debounceTime, map, distinctUntilChanged } from \"rxjs\";\r\n\r\nconst CurrencyItem = function (props) {\r\n    const [state, setState] = React.useState(props.currency.rate);\r\n\r\n    React.useEffect(() => {\r\n        const input = document.getElementById(props.currency.code);\r\n        const stream$ = fromEvent(input, \"input\").pipe(\r\n            map((e) => e.target.value),\r\n            debounceTime(400),\r\n            distinctUntilChanged(),\r\n        );\r\n        stream$.subscribe((value) => {\r\n            props.changeRates(props.currency.code, value.trim() === \"\" ? 0 : value);\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        setState(props.currency.rate);\r\n    }, [props.currency.rate]);\r\n\r\n    const onInput = (event) => {\r\n        let val = event.target.value.replace(/[^0-9,.]/g, \"\");\r\n        val = val.replace(\",\", \".\");\r\n        setState(val);\r\n    };\r\n\r\n    const style = props.currency.rmBtnVisibility ? {} : { visibility: \"hidden\" };\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-between align-items-start mb-1\">\r\n            <strong className=\"m-2\">{props.currency.code}</strong>\r\n            <div className=\"d-flex flex-column justify-content-start align-items-end fullWidth\">\r\n                <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    id={props.currency.code}\r\n                    value={state}\r\n                    onInput={onInput}\r\n                    onFocus={() => props.onFocus(props.currency.code)}\r\n                />\r\n                <small className=\"text-muted\">{props.currency.description}</small>\r\n            </div>\r\n            <button\r\n                className=\"rmBtn mt-1\"\r\n                style={style}\r\n                onClick={() => {\r\n                    props.removeCurrency(props.currency.code, props.currency);\r\n                }}\r\n            >\r\n                &times;\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    removeCurrency,\r\n    changeRates,\r\n    onFocus,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currencys: state.currencys,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyItem);\r\n","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport CurrencyItem from \"./CurrencyItem\";\r\n\r\nconst CurrencyList = function({ currencys }) {\r\n    if (currencys.length === 0) {\r\n        return (\r\n            <div className=\"spinner-border m-3\"/>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"d-flex flex-column mb-4\">\r\n            {currencys.map((currency) => {\r\n                return <CurrencyItem currency={currency} key={currency.code} />;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    currencys: state.currencys\r\n})\r\n\r\nexport default connect(mapStateToProps)(CurrencyList);","import React from 'react';\r\n\r\nexport default function SelectItem({symbol}){\r\n    return(\r\n        <option value={symbol.code}>{symbol.code} - {symbol.description}</option>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SelectItem from \"./SelectItem\";\r\nimport { addCurrency, changeRates, updateSymbols } from \"../redux/actions\";\r\n\r\nconst SelectList = function (props) {\r\n    const selectItems = () => {\r\n        const result = [];\r\n        for (const key in props.selectState) {\r\n            result.push(<SelectItem symbol={props.selectState[key]} key={props.selectState[key].code} />);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        props.addCurrency(event.target.value, true);\r\n        const active = props.currencys.filter((c) => c.active)[0] || {};\r\n        props.changeRates(active.code, active.rate);\r\n        props.updateSymbols();\r\n        event.target.selectedIndex = 0;\r\n    };\r\n\r\n    return (\r\n        <select className=\"btn btn-light fullWidth\" onChange={onChange}>\r\n            <option value=\"0\">Add currency</option>\r\n            {selectItems()}\r\n        </select>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    selectState: state.select,\r\n    currencys: state.currencys,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addCurrency,\r\n    changeRates,\r\n    updateSymbols,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectList);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CurrencyList from \"./currency/CurrencyList\";\r\nimport SelectList from \"./selector/SelectList\";\r\nimport { addCurrency, getSymbols, changeRates, updateSymbols, onFocus } from \"./redux/actions\";\r\n\r\nconst CurrencyConverter = function (props) {\r\n    React.useEffect(async () => {\r\n        await props.getSymbols();\r\n        props.defaultCurrencys.forEach((c) => {\r\n            props.addCurrency(c, false);\r\n        });\r\n        await props.changeRates(props.defaultCurrencys[0], \"1\");\r\n        props.updateSymbols();\r\n        props.onFocus(props.defaultCurrencys[0]);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"itemWidth\">\r\n                <h2 className=\"mt-4\">Currency converter</h2>\r\n                <span className=\"m-1\">Exchange rate on {props.date}</span>\r\n            </div>\r\n            <div className=\"alert alert-primary itemWidth mt-1\">\r\n                <CurrencyList />\r\n                <SelectList />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    date: state.date,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addCurrency,\r\n    getSymbols,\r\n    changeRates,\r\n    updateSymbols,\r\n    onFocus,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyConverter);\r\n","import { CHANGE_RATES, ON_FOCUS, REMOVE_CURRENCY, ADD_CURRENCY, GET_SYMBOLS, UPDATE_SYMBOLS } from \"./types\";\r\n\r\nconst initState = {\r\n    currencys: [],\r\n    select: {},\r\n    symbols: {},\r\n    date: new Date().toLocaleDateString(),\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case REMOVE_CURRENCY:\r\n            return { ...state, currencys: state.currencys.filter((c) => c.code !== action.payload) };\r\n        case CHANGE_RATES:\r\n            const newState = state.currencys.map((c) => {\r\n                if (c.code === action.payload[1].base) {\r\n                    c.rate = action.payload[1].amount;\r\n                }else{\r\n                    c.rate = action.payload[0].rates[c.code] === null ? 0 : action.payload[0].rates[c.code];\r\n                }\r\n                return c;\r\n            });\r\n            return { ...state, currencys: newState, date: new Date(action.payload[0].date).toLocaleDateString() };\r\n        case ON_FOCUS:\r\n            return {\r\n                ...state,\r\n                currencys: state.currencys.map((c) => {\r\n                    if (action.payload === c.code) {\r\n                        c.active = true;\r\n                    } else {\r\n                        c.active = false;\r\n                    }\r\n                    return c;\r\n                }),\r\n            };\r\n        case ADD_CURRENCY:\r\n            if (action.payload.code !== \"0\") {\r\n                const newCurrencys = [...state.currencys];\r\n                newCurrencys.push({\r\n                    code: action.payload[0],\r\n                    description: state.symbols[action.payload[0]].description,\r\n                    rate: 0,\r\n                    rmBtnVisibility: action.payload[1],\r\n                    active: false,\r\n                });\r\n                return { ...state, currencys: newCurrencys };\r\n            }\r\n            return state;\r\n        case GET_SYMBOLS:\r\n            return { ...state, symbols: action.payload };\r\n        case UPDATE_SYMBOLS:\r\n            let newSymbols = { ...state.symbols };\r\n            state.currencys.forEach((c) => {\r\n                delete newSymbols[c.code];\r\n            });\r\n            return { ...state, select: newSymbols };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\nimport CurrencyConverter from \"./currencyConverter/CurrencyConverter\";\nimport { reducer } from \"./currencyConverter/redux/reducer\";\nimport { Provider } from \"react-redux\";\nimport { compose, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n    reducer,\n    compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n);\n\nfunction App() {\n    return (\n        <div className=\"d-flex flex-column align-items-center\">\n            <Provider store={store}>\n                <CurrencyConverter defaultCurrencys={[\"USD\", \"EUR\", \"RUB\", \"BYN\"]} />\n            </Provider>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}